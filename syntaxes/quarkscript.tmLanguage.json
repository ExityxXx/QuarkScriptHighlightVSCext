{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "QuarkScript",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#functions"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				
				{
					"name": "entity.name.class.quarkscript",
					"match": "\\b(module|class)\\s+([A-Za-z_][A-Za-z0-9_]*)",
					"captures": {
						"1": { "name": "keyword.declaration.class.quarkscript" },
						"2": { "name": "entity.name.type.class.quarkscript" }
					}
				},
				{
					"name": "keyword.declaration.class.quarkscript",
					"match": "\\b(module|class)\\b"
				},
				{
					"name": "keyword.declaration.quarkscript",
					"match": "\\b(func|var|const|class|preload|static|const|deposit|trigger|recursive)\\b"
				},
				{
					"name": "keyword.control.quarkscript",
					"match": "\\b(if|else|while|stdout|for|return|break|extends|continue|this|private|public|implement)\\b"
				},
				{
        			"name": "storage.type.quarkscript",
        			"match": "\\b(Int|Float|String|Bool|Array|Void)\\b"
      			},	
				{
					"name": "constant.language.boolean.quarkscript",
					"match": "\\b(true|false|null)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.quarkscript",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.quarkscript",
					"match": "\\\\(n|t|r|\\\\|\")"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.integer.quarkscript",
					"match": "\\b\\d+\\b"
				},
				{
					"name": "constant.numeric.float.quarkscript",
					"match": "\\b\\d+\\.\\d+(?:[eE][-+]?\\d+)?\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.quarkscript",
					"match": "//.*$"
				},
				{
					"name": "comment.block.quarkscript",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.quarkscript",
					"match": "[-+*/%=&|<>!?:]|\\-\\>"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.quarkscript",
					"match": "\\b(?!(func|if|else|while|for|return|break|extends|continue|this|private|public|implement|Int|String|Float|Bool|Array)\\b)[a-zA-Z_][a-zA-Z0-9_]*(?=\\()"
				}
			]
		}
	},
	"scopeName": "source.quarkscript"
}